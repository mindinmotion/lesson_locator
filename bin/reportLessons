#!/usr/bin/env python
# ---------------------------------------------------------------------------------------------
"""
reportLessons

Copyright (c) 2014 Kevin Cureton/Nik Gervae
"""
# ---------------------------------------------------------------------------------------------

# ---------------------------------------------------------------------------------------------
# TODO
#
# ---------------------------------------------------------------------------------------------

# ---------------------------------------------------------------------------------------------
# Imports
# ---------------------------------------------------------------------------------------------
import datetime
import json
import os
import re
import string
import sys

import pyramid.renderers
import pyramid.view


# ---------------------------------------------------------------------------------------------
# Globals
# ---------------------------------------------------------------------------------------------

LESSONS_TOP = os.path.abspath(os.path.join(os.path.dirname(sys.argv[0]), "../data"))
LESSON_SETS = [
    "alexander_yanai"
]

# ---------------------------------------------------------------------------------------------
# Main
# ---------------------------------------------------------------------------------------------
def main():
    """
    Please run "parseLessons --help" for the usage message.
    """
    LESSONS_PATH = os.path.join(LESSONS_TOP, LESSON_SETS[0])
    ORIGINAL_LESSONS_PATH = os.path.join(LESSONS_PATH, "original")
    ANNOTATED_LESSONS_PATH = os.path.join(LESSONS_PATH, "annotated")

    print("Scanning annotated lessons in %s..." % ANNOTATED_LESSONS_PATH)

    for item in os.listdir(ANNOTATED_LESSONS_PATH):
        if item == ".DS_Store": continue
        if re.match(r'^\.', item): continue

        print("%s" % item)

        item_path = os.path.join(ANNOTATED_LESSONS_PATH, item)

        fh = open(item_path)
        lesson_json = json.load(fh)
        fh.close()

        for section_start_linenos in lesson_json['parsed']['section_starts']:
            section_start_text = lesson_json['text'][section_start_linenos]
            print("    section: %s" % section_start_text)


        end_of_lesson_linenos = lesson_json['parsed']['end_of_lesson']
        end_of_lesson_text = lesson_json['text'][end_of_lesson_linenos]
        print("    eol_marker: %s" % end_of_lesson_text)

    return 0


# ---------------------------------------------------------------------------------------------
# Module test harness
# ---------------------------------------------------------------------------------------------
if __name__ == "__main__":
    exit_status = main()
    sys.exit(exit_status)
